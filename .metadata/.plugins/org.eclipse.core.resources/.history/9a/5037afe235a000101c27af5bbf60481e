package vn.iotstar.Demo2.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

import vn.iotstar.Demo2.repository.UserInfoRepository;
import vn.iotstar.Demo2.service.UserInfoService;

@Configuration
@EnableWebSecurity
public class SecurityConfig {

    @Autowired
    UserInfoRepository repository;

    @Bean
    public UserDetailsService userDetailsService() {
        return new UserInfoService(repository); // Sử dụng UserInfoService đã tạo
    }

    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder(); // Mã hóa mật khẩu
    }

    @Bean
    public AuthenticationProvider authenticationProvider() {
        DaoAuthenticationProvider authenticationProvider = new DaoAuthenticationProvider();
        authenticationProvider.setUserDetailsService(userDetailsService()); // Liên kết với UserDetailsService
        authenticationProvider.setPasswordEncoder(passwordEncoder()); // Mã hóa mật khẩu
        return authenticationProvider;
    }

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        return http.csrf().disable()  // Tắt CSRF nếu cần
            .authorizeHttpRequests(auth -> auth
                .requestMatchers("/user/new").permitAll() // Cho phép mọi người truy cập vào "/user/new"
                .requestMatchers("/").permitAll()  // Cho phép truy cập vào trang chủ
                .requestMatchers("/customer/**").authenticated() // Yêu cầu phải xác thực khi truy cập /customer/**
            )
            .formLogin(Customizer.withDefaults())  // Cấu hình form login mặc định
            .build();
    }
}

